# Generated by Django 3.1.1 on 2022-04-24 02:48

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(blank=True, max_length=200, null=True)),
                ('api_token_expired', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_owner', models.BooleanField(default=False)),
                ('forgot_password_code', models.CharField(blank=True, max_length=100, null=True)),
                ('forgot_password_code_is_valid', models.BooleanField(blank=True, null=True)),
                ('email_2fa', models.BooleanField(default=False)),
                ('email_otp', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_2fa', models.BooleanField(default=False)),
                ('newsletter', models.BooleanField(default=False)),
                ('phone_otp', models.CharField(blank=True, max_length=100, null=True)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_vendor', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('role_name', models.TextField(blank=True, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('action_performed', models.TextField(blank=True, null=True)),
                ('previous_data', models.TextField(blank=True, null=True)),
                ('updated_data', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('email_body', models.TextField(blank=True, null=True)),
                ('to_address', models.CharField(blank=True, max_length=250, null=True)),
                ('provider', models.CharField(blank=True, max_length=250, null=True)),
                ('from_address', models.CharField(blank=True, max_length=250, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=250, null=True)),
                ('response_status', models.BooleanField(default=False)),
                ('response_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('provider_type', models.CharField(blank=True, max_length=250, null=True)),
                ('api_key', models.TextField(blank=True, null=True)),
                ('from_email', models.TextField(blank=True, null=True)),
                ('smtp_host', models.CharField(blank=True, max_length=255, null=True)),
                ('smtp_port', models.IntegerField(blank=True, null=True)),
                ('smtp_password', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('template', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=250, null=True)),
                ('provider', models.CharField(blank=True, max_length=250, null=True)),
                ('mask', models.CharField(blank=True, max_length=250, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=250, null=True)),
                ('message_status', models.BooleanField(default=False)),
                ('message_response', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('provider_type', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_msisdn', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_username', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_password', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_mask', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_sid', models.CharField(blank=True, max_length=250, null=True)),
                ('message_dr', models.CharField(blank=True, max_length=250, null=True)),
                ('message_lang', models.CharField(blank=True, max_length=250, null=True)),
                ('message_type', models.CharField(blank=True, max_length=250, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLastLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_last_login', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_invitation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('dashboard', models.BooleanField(default=False)),
                ('theme', models.BooleanField(default=False)),
                ('products', models.BooleanField(default=False)),
                ('orders', models.BooleanField(default=False)),
                ('customer', models.BooleanField(default=False)),
                ('discounts', models.BooleanField(default=False)),
                ('configuration', models.BooleanField(default=False)),
                ('customization', models.BooleanField(default=False)),
                ('vendor', models.BooleanField(default=False)),
                ('approvals', models.BooleanField(default=False)),
                ('notifications', models.BooleanField(default=False)),
                ('product_list', models.BooleanField(default=False)),
                ('product_groups', models.BooleanField(default=False)),
                ('collections', models.BooleanField(default=False)),
                ('categories', models.BooleanField(default=False)),
                ('brands', models.BooleanField(default=False)),
                ('homepage', models.BooleanField(default=False)),
                ('static_pages', models.BooleanField(default=False)),
                ('header', models.BooleanField(default=False)),
                ('footer', models.BooleanField(default=False)),
                ('navigation', models.BooleanField(default=False)),
                ('filters', models.BooleanField(default=False)),
                ('main_discounts', models.BooleanField(default=False)),
                ('coupons', models.BooleanField(default=False)),
                ('store_setting', models.BooleanField(default=False)),
                ('user_management', models.BooleanField(default=False)),
                ('loyalty', models.BooleanField(default=False)),
                ('shipping_regions', models.BooleanField(default=False)),
                ('shipping_methods', models.BooleanField(default=False)),
                ('checkout_setting', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_permission', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='emailtemplates',
            index=models.Index(fields=['id'], name='authenticat_id_c1b4b5_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
